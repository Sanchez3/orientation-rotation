{"version":3,"sources":["webpack:///./src/assets/js/entities/OrbitControls.js","webpack:///./src/assets/js/entities/DeviceOrientationControls.js","webpack:///./src/assets/js/entities/LegacyJSONLoader.js","webpack:///./src/assets/js/entities/Game.js","webpack:///./src/assets/js/main.js"],"names":["three_module","object","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","this","undefined","document","enabled","target","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MIDDLE","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","setFromUnitVectors","up","inverse","sub","applyQuaternion","setFromVector3","rotateLeft","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","focus","button","ctrlKey","metaKey","shiftKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","passive","subVectors","x","y","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","prototype","Object","create","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","rotation","reorder","deviceOrientation","screenOrientation","alphaOffset","zee","euler","q0","q1","onDeviceOrientationChangeEvent","onScreenOrientationChangeEvent","orientation","setObjectQuaternion","alpha","beta","gamma","orient","setFromEuler","multiply","setFromAxisAngle","connect","disconnect","device","degToRad","LegacyJSONLoader","manager","withCredentials","assign","crossOrigin","load","url","onLoad","onProgress","onError","path","extractUrlBase","loader","setPath","setWithCredentials","text","json","JSON","parse","metadata","toLowerCase","geometry","materials","setResourcePath","resourcePath","setCrossOrigin","data","isBitSet","i","j","fi","zLength","colorIndex","normalIndex","uvIndex","materialIndex","isQuad","hasMaterial","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","vertex","face","faceA","faceB","hex","normal","uvLayer","uv","u","faces","vertices","normals","colors","nUvLayers","uvs","faceVertexUvs","z","push","a","b","c","vertexNormals","color","setHex","vertexColors","parseModel","influencesPerVertex","skinWeights","l","w","skinIndices","d","bones","parseSkin","morphTargets","name","dstVertices","srcVertices","vl","morphColors","fromArray","parseMorphing","outputAnimations","animations","animation","concat","clip","parseAnimation","morphAnimationClips","CreateClipsFromMorphTargetSequences","parseAnimations","computeFaceNormals","computeBoundingSphere","initMaterials","THREE","[object Object]","init","initCanvas","that","config","width","innerWidth","height","innerHeight","autoResize","transparent","forceCanvas","antialias","resolution","devicePixelRatio","preserveDrawingBuffer","view","getElementById","lib","SCALE_MODE","LINEAR","stage0","progressText1","progressL_mask","startBtn","app","renderer","style","plugins","interaction","autoPreventDefault","bg","fromImage","anchor","screen","cfg","xscale","yscale","stage","addChild","progressC","BitmapText","font","align","swidth","sheight","progressText2","progressBg","progressL","mask","startButton","startButtonDown","interactive","buttonMode","on","texture","initThree","res","resources","pigContainer0","npig","Spine","spineData","localRect0","getLocalBounds","setAnimation","pigContainer1","spig","localRect1","setTimeout","sprites","ParticleContainer","maggots","totalSprites","rd","floor","random","p","fromFrame","direction","turningSpeed","speed","pBounds","pBoundsPadding","ticker","sin","cos","onfileComplete","onComplete","onLoadComplete","e","_p","round","progress","esm","to","ease","Power3","easeIn","onUpdate","val","delay","getElementsByClassName","h","resize","render","airplaneMesh","wWidth","wHeight","rr","rx","ry","rz","scene","camera","setSize","pointLight","boatContainer","airplaneContainer","controls","orbitControls","startFlag","light","threeAssets","threecallback","sgeometry","starrynight","smaterial","map","fog","opacity","smesh","boatGeo","boatMat","side","specular","shininess","boatMesh","airplaneGeo","airplaneMat","roughness","metalness","emissive","emissiveMap","equals","onStart","itemsLoaded","itemsTotal","parseInt","objectLoader","rs","textureLoader","THREE_TEXTURE","fromCanvas","THREE_SPRITE","from","game0","countdownframes","numframes","countSprite","AnimatedSprite","loop","animationSpeed","play","numSprite","onFrameChange","n","coinframes","coinSprite","aspect","animate","requestAnimationFrame","v1","v2","getWorldDirection","dotValue","crossValue","toFixed","isParallel","s","pwidth","pheight","h5","isPc","userAgentInfo","navigator","userAgent","Agents","Array","flag","indexOf","rootResize","wFsize","documentElement","getElementsByTagName","fontSize","eventInit","cssInit","interval","timeout","end","lastInnerWidth","lastInnerHeight","noChangeCount","clearInterval","clearTimeout","setInterval","onload"],"mappings":"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","file":"assets/js/main.1885a8d70e74f4e48f22.js","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nimport * as THREE from 'three'\n\nTHREE.OrbitControls = function(object, domElement) {\n\n    this.object = object;\n\n    this.domElement = (domElement !== undefined) ? domElement : document;\n\n    // Set to false to disable this control\n    this.enabled = true;\n\n    // \"target\" sets the location of focus, where the object orbits around\n    this.target = new THREE.Vector3();\n\n    // How far you can dolly in and out ( PerspectiveCamera only )\n    this.minDistance = 0;\n    this.maxDistance = Infinity;\n\n    // How far you can zoom in and out ( OrthographicCamera only )\n    this.minZoom = 0;\n    this.maxZoom = Infinity;\n\n    // How far you can orbit vertically, upper and lower limits.\n    // Range is 0 to Math.PI radians.\n    this.minPolarAngle = 0; // radians\n    this.maxPolarAngle = Math.PI; // radians\n\n    // How far you can orbit horizontally, upper and lower limits.\n    // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n    this.minAzimuthAngle = -Infinity; // radians\n    this.maxAzimuthAngle = Infinity; // radians\n\n    // Set to true to enable damping (inertia)\n    // If damping is enabled, you must call controls.update() in your animation loop\n    this.enableDamping = false;\n    this.dampingFactor = 0.25;\n\n    // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n    // Set to false to disable zooming\n    this.enableZoom = true;\n    this.zoomSpeed = 1.0;\n\n    // Set to false to disable rotating\n    this.enableRotate = true;\n    this.rotateSpeed = 1.0;\n\n    // Set to false to disable panning\n    this.enablePan = true;\n    this.panSpeed = 1.0;\n    this.screenSpacePanning = false; // if true, pan in screen-space\n    this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n    // Set to true to automatically rotate around the target\n    // If auto-rotate is enabled, you must call controls.update() in your animation loop\n    this.autoRotate = false;\n    this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n    // Set to false to disable use of the keys\n    this.enableKeys = true;\n\n    // The four arrow keys\n    this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n    // Mouse buttons\n    this.mouseButtons = { LEFT: THREE.MOUSE.LEFT, MIDDLE: THREE.MOUSE.MIDDLE, RIGHT: THREE.MOUSE.RIGHT };\n\n    // for reset\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object.zoom;\n\n    //\n    // public methods\n    //\n\n    this.getPolarAngle = function() {\n\n        return spherical.phi;\n\n    };\n\n    this.getAzimuthalAngle = function() {\n\n        return spherical.theta;\n\n    };\n\n    this.saveState = function() {\n\n        scope.target0.copy(scope.target);\n        scope.position0.copy(scope.object.position);\n        scope.zoom0 = scope.object.zoom;\n\n    };\n\n    this.reset = function() {\n\n        scope.target.copy(scope.target0);\n        scope.object.position.copy(scope.position0);\n        scope.object.zoom = scope.zoom0;\n\n        scope.object.updateProjectionMatrix();\n        scope.dispatchEvent(changeEvent);\n\n        scope.update();\n\n        state = STATE.NONE;\n\n    };\n\n    // this method is exposed, but perhaps it would be better if we can make it private...\n    this.update = function() {\n\n        var offset = new THREE.Vector3();\n\n        // so camera.up is the orbit axis\n        var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n        var quatInverse = quat.clone().inverse();\n\n        var lastPosition = new THREE.Vector3();\n        var lastQuaternion = new THREE.Quaternion();\n\n        return function update() {\n\n            var position = scope.object.position;\n\n            offset.copy(position).sub(scope.target);\n\n            // rotate offset to \"y-axis-is-up\" space\n            offset.applyQuaternion(quat);\n\n            // angle from z-axis around y-axis\n            spherical.setFromVector3(offset);\n\n            if (scope.autoRotate && state === STATE.NONE) {\n\n                rotateLeft(getAutoRotationAngle());\n\n            }\n\n            spherical.theta += sphericalDelta.theta;\n            spherical.phi += sphericalDelta.phi;\n\n            // restrict theta to be between desired limits\n            spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n            // restrict phi to be between desired limits\n            spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n            spherical.makeSafe();\n\n\n            spherical.radius *= scale;\n\n            // restrict radius to be between desired limits\n            spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n            // move target to panned location\n            scope.target.add(panOffset);\n\n            offset.setFromSpherical(spherical);\n\n            // rotate offset back to \"camera-up-vector-is-up\" space\n            offset.applyQuaternion(quatInverse);\n\n            position.copy(scope.target).add(offset);\n\n            scope.object.lookAt(scope.target);\n\n            if (scope.enableDamping === true) {\n\n                sphericalDelta.theta *= (1 - scope.dampingFactor);\n                sphericalDelta.phi *= (1 - scope.dampingFactor);\n\n                panOffset.multiplyScalar(1 - scope.dampingFactor);\n\n            } else {\n\n                sphericalDelta.set(0, 0, 0);\n\n                panOffset.set(0, 0, 0);\n\n            }\n\n            scale = 1;\n\n            // update condition is:\n            // min(camera displacement, camera rotation in radians)^2 > EPS\n            // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n            if (zoomChanged ||\n                lastPosition.distanceToSquared(scope.object.position) > EPS ||\n                8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n                scope.dispatchEvent(changeEvent);\n\n                lastPosition.copy(scope.object.position);\n                lastQuaternion.copy(scope.object.quaternion);\n                zoomChanged = false;\n\n                return true;\n\n            }\n\n            return false;\n\n        };\n\n    }();\n\n    this.dispose = function() {\n\n        scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n        scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n        scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n        scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n        scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n        scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n\n        window.removeEventListener('keydown', onKeyDown, false);\n\n        //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    };\n\n    //\n    // internals\n    //\n\n    var scope = this;\n\n    var changeEvent = { type: 'change' };\n    var startEvent = { type: 'start' };\n    var endEvent = { type: 'end' };\n\n    var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY_PAN: 4 };\n\n    var state = STATE.NONE;\n\n    var EPS = 0.000001;\n\n    // current position in spherical coordinates\n    var spherical = new THREE.Spherical();\n    var sphericalDelta = new THREE.Spherical();\n\n    var scale = 1;\n    var panOffset = new THREE.Vector3();\n    var zoomChanged = false;\n\n    var rotateStart = new THREE.Vector2();\n    var rotateEnd = new THREE.Vector2();\n    var rotateDelta = new THREE.Vector2();\n\n    var panStart = new THREE.Vector2();\n    var panEnd = new THREE.Vector2();\n    var panDelta = new THREE.Vector2();\n\n    var dollyStart = new THREE.Vector2();\n    var dollyEnd = new THREE.Vector2();\n    var dollyDelta = new THREE.Vector2();\n\n    function getAutoRotationAngle() {\n\n        return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n    }\n\n    function getZoomScale() {\n\n        return Math.pow(0.95, scope.zoomSpeed);\n\n    }\n\n    function rotateLeft(angle) {\n\n        sphericalDelta.theta -= angle;\n\n    }\n\n    function rotateUp(angle) {\n\n        sphericalDelta.phi -= angle;\n\n    }\n\n    var panLeft = function() {\n\n        var v = new THREE.Vector3();\n\n        return function panLeft(distance, objectMatrix) {\n\n            v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n            v.multiplyScalar(-distance);\n\n            panOffset.add(v);\n\n        };\n\n    }();\n\n    var panUp = function() {\n\n        var v = new THREE.Vector3();\n\n        return function panUp(distance, objectMatrix) {\n\n            if (scope.screenSpacePanning === true) {\n\n                v.setFromMatrixColumn(objectMatrix, 1);\n\n            } else {\n\n                v.setFromMatrixColumn(objectMatrix, 0);\n                v.crossVectors(scope.object.up, v);\n\n            }\n\n            v.multiplyScalar(distance);\n\n            panOffset.add(v);\n\n        };\n\n    }();\n\n    // deltaX and deltaY are in pixels; right and down are positive\n    var pan = function() {\n\n        var offset = new THREE.Vector3();\n\n        return function pan(deltaX, deltaY) {\n\n            var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n            if (scope.object.isPerspectiveCamera) {\n\n                // perspective\n                var position = scope.object.position;\n                offset.copy(position).sub(scope.target);\n                var targetDistance = offset.length();\n\n                // half of the fov is center to top of screen\n                targetDistance *= Math.tan((scope.object.fov / 2) * Math.PI / 180.0);\n\n                // we use only clientHeight here so aspect ratio does not distort speed\n                panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n                panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n\n            } else if (scope.object.isOrthographicCamera) {\n\n                // orthographic\n                panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n                panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n\n            } else {\n\n                // camera neither orthographic nor perspective\n                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n                scope.enablePan = false;\n\n            }\n\n        };\n\n    }();\n\n    function dollyIn(dollyScale) {\n\n        if (scope.object.isPerspectiveCamera) {\n\n            scale /= dollyScale;\n\n        } else if (scope.object.isOrthographicCamera) {\n\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n\n        } else {\n\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n\n        }\n\n    }\n\n    function dollyOut(dollyScale) {\n\n        if (scope.object.isPerspectiveCamera) {\n\n            scale *= dollyScale;\n\n        } else if (scope.object.isOrthographicCamera) {\n\n            scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n            scope.object.updateProjectionMatrix();\n            zoomChanged = true;\n\n        } else {\n\n            console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n            scope.enableZoom = false;\n\n        }\n\n    }\n\n    //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n\n        //console.log( 'handleMouseDownRotate' );\n\n        rotateStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseDownDolly(event) {\n\n        //console.log( 'handleMouseDownDolly' );\n\n        dollyStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseDownPan(event) {\n\n        //console.log( 'handleMouseDownPan' );\n\n        panStart.set(event.clientX, event.clientY);\n\n    }\n\n    function handleMouseMoveRotate(event) {\n\n        //console.log( 'handleMouseMoveRotate' );\n\n        rotateEnd.set(event.clientX, event.clientY);\n\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n        rotateStart.copy(rotateEnd);\n\n        scope.update();\n\n    }\n\n    function handleMouseMoveDolly(event) {\n\n        //console.log( 'handleMouseMoveDolly' );\n\n        dollyEnd.set(event.clientX, event.clientY);\n\n        dollyDelta.subVectors(dollyEnd, dollyStart);\n\n        if (dollyDelta.y > 0) {\n\n            dollyIn(getZoomScale());\n\n        } else if (dollyDelta.y < 0) {\n\n            dollyOut(getZoomScale());\n\n        }\n\n        dollyStart.copy(dollyEnd);\n\n        scope.update();\n\n    }\n\n    function handleMouseMovePan(event) {\n\n        //console.log( 'handleMouseMovePan' );\n\n        panEnd.set(event.clientX, event.clientY);\n\n        panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n        pan(panDelta.x, panDelta.y);\n\n        panStart.copy(panEnd);\n\n        scope.update();\n\n    }\n\n    function handleMouseUp(event) {\n\n        // console.log( 'handleMouseUp' );\n\n    }\n\n    function handleMouseWheel(event) {\n\n        // console.log( 'handleMouseWheel' );\n\n        if (event.deltaY < 0) {\n\n            dollyOut(getZoomScale());\n\n        } else if (event.deltaY > 0) {\n\n            dollyIn(getZoomScale());\n\n        }\n\n        scope.update();\n\n    }\n\n    function handleKeyDown(event) {\n\n        //console.log( 'handleKeyDown' );\n\n        // prevent the browser from scrolling on cursor up/down\n\n        event.preventDefault();\n\n        switch (event.keyCode) {\n\n            case scope.keys.UP:\n                pan(0, scope.keyPanSpeed);\n                scope.update();\n                break;\n\n            case scope.keys.BOTTOM:\n                pan(0, -scope.keyPanSpeed);\n                scope.update();\n                break;\n\n            case scope.keys.LEFT:\n                pan(scope.keyPanSpeed, 0);\n                scope.update();\n                break;\n\n            case scope.keys.RIGHT:\n                pan(-scope.keyPanSpeed, 0);\n                scope.update();\n                break;\n\n        }\n\n    }\n\n    function handleTouchStartRotate(event) {\n\n        //console.log( 'handleTouchStartRotate' );\n\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    }\n\n    function handleTouchStartDollyPan(event) {\n\n        //console.log( 'handleTouchStartDollyPan' );\n\n        if (scope.enableZoom) {\n\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyStart.set(0, distance);\n\n        }\n\n        if (scope.enablePan) {\n\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            panStart.set(x, y);\n\n        }\n\n    }\n\n    function handleTouchMoveRotate(event) {\n\n        //console.log( 'handleTouchMoveRotate' );\n\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n        rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n\n        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n\n        rotateStart.copy(rotateEnd);\n\n        scope.update();\n\n    }\n\n    function handleTouchMoveDollyPan(event) {\n\n        //console.log( 'handleTouchMoveDollyPan' );\n\n        if (scope.enableZoom) {\n\n            var dx = event.touches[0].pageX - event.touches[1].pageX;\n            var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n            var distance = Math.sqrt(dx * dx + dy * dy);\n\n            dollyEnd.set(0, distance);\n\n            dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n\n            dollyIn(dollyDelta.y);\n\n            dollyStart.copy(dollyEnd);\n\n        }\n\n        if (scope.enablePan) {\n\n            var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n            var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n\n            panEnd.set(x, y);\n\n            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n\n            pan(panDelta.x, panDelta.y);\n\n            panStart.copy(panEnd);\n\n        }\n\n        scope.update();\n\n    }\n\n    function handleTouchEnd(event) {\n\n        //console.log( 'handleTouchEnd' );\n\n    }\n\n    //\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onMouseDown(event) {\n\n        if (scope.enabled === false) return;\n\n        // Prevent the browser from scrolling.\n\n        event.preventDefault();\n\n        // Manually set the focus since calling preventDefault above\n        // prevents the browser from setting it automatically.\n\n        scope.domElement.focus ? scope.domElement.focus() : window.focus();\n\n        switch (event.button) {\n\n            case scope.mouseButtons.LEFT:\n\n                if (event.ctrlKey || event.metaKey || event.shiftKey) {\n\n                    if (scope.enablePan === false) return;\n\n                    handleMouseDownPan(event);\n\n                    state = STATE.PAN;\n\n                } else {\n\n                    if (scope.enableRotate === false) return;\n\n                    handleMouseDownRotate(event);\n\n                    state = STATE.ROTATE;\n\n                }\n\n                break;\n\n            case scope.mouseButtons.MIDDLE:\n\n                if (scope.enableZoom === false) return;\n\n                handleMouseDownDolly(event);\n\n                state = STATE.DOLLY;\n\n                break;\n\n            case scope.mouseButtons.RIGHT:\n\n                if (scope.enablePan === false) return;\n\n                handleMouseDownPan(event);\n\n                state = STATE.PAN;\n\n                break;\n\n        }\n\n        if (state !== STATE.NONE) {\n\n            document.addEventListener('mousemove', onMouseMove, { passive: false });\n            document.addEventListener('mouseup', onMouseUp, { passive: false });\n\n            scope.dispatchEvent(startEvent);\n\n        }\n\n    }\n\n    function onMouseMove(event) {\n\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n\n        switch (state) {\n\n            case STATE.ROTATE:\n\n                if (scope.enableRotate === false) return;\n\n                handleMouseMoveRotate(event);\n\n                break;\n\n            case STATE.DOLLY:\n\n                if (scope.enableZoom === false) return;\n\n                handleMouseMoveDolly(event);\n\n                break;\n\n            case STATE.PAN:\n\n                if (scope.enablePan === false) return;\n\n                handleMouseMovePan(event);\n\n                break;\n\n        }\n\n    }\n\n    function onMouseUp(event) {\n\n        if (scope.enabled === false) return;\n\n        handleMouseUp(event);\n\n        document.removeEventListener('mousemove', onMouseMove, false);\n        document.removeEventListener('mouseup', onMouseUp, false);\n\n        scope.dispatchEvent(endEvent);\n\n        state = STATE.NONE;\n\n    }\n\n    function onMouseWheel(event) {\n\n        if (scope.enabled === false || scope.enableZoom === false || (state !== STATE.NONE && state !== STATE.ROTATE)) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        scope.dispatchEvent(startEvent);\n\n        handleMouseWheel(event);\n\n        scope.dispatchEvent(endEvent);\n\n    }\n\n    function onKeyDown(event) {\n\n        if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n        handleKeyDown(event);\n\n    }\n\n    function onTouchStart(event) {\n\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n\n        switch (event.touches.length) {\n\n            case 1: // one-fingered touch: rotate\n\n                if (scope.enableRotate === false) return;\n\n                handleTouchStartRotate(event);\n\n                state = STATE.TOUCH_ROTATE;\n\n                break;\n\n            case 2: // two-fingered touch: dolly-pan\n\n                if (scope.enableZoom === false && scope.enablePan === false) return;\n\n                handleTouchStartDollyPan(event);\n\n                state = STATE.TOUCH_DOLLY_PAN;\n\n                break;\n\n            default:\n\n                state = STATE.NONE;\n\n        }\n\n        if (state !== STATE.NONE) {\n\n            scope.dispatchEvent(startEvent);\n\n        }\n\n    }\n\n    function onTouchMove(event) {\n\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n        event.stopPropagation();\n\n        switch (event.touches.length) {\n\n            case 1: // one-fingered touch: rotate\n\n                if (scope.enableRotate === false) return;\n                if (state !== STATE.TOUCH_ROTATE) return; // is this needed?\n\n                handleTouchMoveRotate(event);\n\n                break;\n\n            case 2: // two-fingered touch: dolly-pan\n\n                if (scope.enableZoom === false && scope.enablePan === false) return;\n                if (state !== STATE.TOUCH_DOLLY_PAN) return; // is this needed?\n\n                handleTouchMoveDollyPan(event);\n\n                break;\n\n            default:\n\n                state = STATE.NONE;\n\n        }\n\n    }\n\n    function onTouchEnd(event) {\n\n        if (scope.enabled === false) return;\n\n        handleTouchEnd(event);\n\n        scope.dispatchEvent(endEvent);\n\n        state = STATE.NONE;\n\n    }\n\n    function onContextMenu(event) {\n\n        if (scope.enabled === false) return;\n\n        event.preventDefault();\n\n    }\n\n    //\n\n    scope.domElement.addEventListener('contextmenu', onContextMenu, { passive: false });\n\n    scope.domElement.addEventListener('mousedown', onMouseDown, { passive: false });\n    scope.domElement.addEventListener('wheel', onMouseWheel, { passive: false });\n\n    scope.domElement.addEventListener('touchstart', onTouchStart, { passive: false });\n    scope.domElement.addEventListener('touchend', onTouchEnd, { passive: false });\n    scope.domElement.addEventListener('touchmove', onTouchMove, { passive: false });\n\n    window.addEventListener('keydown', onKeyDown, { passive: false });\n\n    // force an update at start\n\n    this.update();\n\n};\n\nTHREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nTHREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\nObject.defineProperties(THREE.OrbitControls.prototype, {\n\n    center: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .center has been renamed to .target');\n            return this.target;\n\n        }\n\n    },\n\n    // backward compatibility\n\n    noZoom: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            return !this.enableZoom;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n            this.enableZoom = !value;\n\n        }\n\n    },\n\n    noRotate: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            return !this.enableRotate;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n            this.enableRotate = !value;\n\n        }\n\n    },\n\n    noPan: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            return !this.enablePan;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n            this.enablePan = !value;\n\n        }\n\n    },\n\n    noKeys: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            return !this.enableKeys;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n            this.enableKeys = !value;\n\n        }\n\n    },\n\n    staticMoving: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            return !this.enableDamping;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n            this.enableDamping = !value;\n\n        }\n\n    },\n\n    dynamicDampingFactor: {\n\n        get: function() {\n\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            return this.dampingFactor;\n\n        },\n\n        set: function(value) {\n\n            console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n            this.dampingFactor = value;\n\n        }\n\n    }\n\n});","/**\n * @author richt / http://richt.me\n * @author WestLangley / http://github.com/WestLangley\n *\n * W3C Device Orientation control (http://w3c.github.io/deviceorientation/spec-source-orientation.html)\n */\nimport * as THREE from 'three'\nTHREE.DeviceOrientationControls = function ( object ) {\n\n\tvar scope = this;\n\n\tthis.object = object;\n\tthis.object.rotation.reorder( 'YXZ' );\n\n\tthis.enabled = true;\n\n\tthis.deviceOrientation = {};\n\tthis.screenOrientation = 0;\n\n\tthis.alphaOffset = 0; // radians\n\n\tvar onDeviceOrientationChangeEvent = function ( event ) {\n\n\t\tscope.deviceOrientation = event;\n\n\t};\n\n\tvar onScreenOrientationChangeEvent = function () {\n\n\t\tscope.screenOrientation = window.orientation || 0;\n\n\t};\n\n\t// The angles alpha, beta and gamma form a set of intrinsic Tait-Bryan angles of type Z-X'-Y''\n\n\tvar setObjectQuaternion = function () {\n\n\t\tvar zee = new THREE.Vector3( 0, 0, 1 );\n\n\t\tvar euler = new THREE.Euler();\n\n\t\tvar q0 = new THREE.Quaternion();\n\n\t\tvar q1 = new THREE.Quaternion( - Math.sqrt( 0.5 ), 0, 0, Math.sqrt( 0.5 ) ); // - PI/2 around the x-axis\n\n\t\treturn function ( quaternion, alpha, beta, gamma, orient ) {\n\n\t\t\teuler.set( beta, alpha, - gamma, 'YXZ' ); // 'ZXY' for the device, but 'YXZ' for us\n\n\t\t\tquaternion.setFromEuler( euler ); // orient the device\n\n\t\t\tquaternion.multiply( q1 ); // camera looks out the back of the device, not the top\n\n\t\t\tquaternion.multiply( q0.setFromAxisAngle( zee, - orient ) ); // adjust for screen orientation\n\n\t\t};\n\n\t}();\n\n\tthis.connect = function () {\n\n\t\tonScreenOrientationChangeEvent(); // run once on load\n\n\t\twindow.addEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.addEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = true;\n\n\t};\n\n\tthis.disconnect = function () {\n\n\t\twindow.removeEventListener( 'orientationchange', onScreenOrientationChangeEvent, false );\n\t\twindow.removeEventListener( 'deviceorientation', onDeviceOrientationChangeEvent, false );\n\n\t\tscope.enabled = false;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tvar device = scope.deviceOrientation;\n\n\t\tif ( device ) {\n\n\t\t\tvar alpha = device.alpha ? THREE.Math.degToRad( device.alpha ) + scope.alphaOffset : 0; // Z\n\n\t\t\tvar beta = device.beta ? THREE.Math.degToRad( device.beta ) : 0; // X'\n\n\t\t\tvar gamma = device.gamma ? THREE.Math.degToRad( device.gamma ) : 0; // Y''\n\n\t\t\tvar orient = scope.screenOrientation ? THREE.Math.degToRad( scope.screenOrientation ) : 0; // O\n\n\t\t\tsetObjectQuaternion( scope.object.quaternion, alpha, beta, gamma, orient );\n\n\t\t}\n\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tscope.disconnect();\n\n\t};\n\n\tthis.connect();\n\n};\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\nimport * as THREE from 'three'\n\nTHREE.LegacyJSONLoader = ( function () {\n\n\tfunction LegacyJSONLoader( manager ) {\n\n\t\tif ( typeof manager === 'boolean' ) {\n\n\t\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\t\tmanager = undefined;\n\n\t\t}\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n\t\tthis.withCredentials = false;\n\n\t}\n\n\tObject.assign( LegacyJSONLoader.prototype, {\n\n\t\tcrossOrigin: 'anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : this.path;\n\n\t\t\tvar loader = new THREE.FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = JSON.parse( text );\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\t\tvar type = metadata.type;\n\n\t\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar object = scope.parse( json, path );\n\t\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( value ) {\n\n\t\t\tthis.resourcePath = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: ( function () {\n\n\t\t\tfunction parseModel( json, geometry ) {\n\n\t\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t\t}\n\n\t\t\t\tvar i, j, fi,\n\n\t\t\t\t\toffset, zLength,\n\n\t\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\t\ttype,\n\t\t\t\t\tisQuad,\n\t\t\t\t\thasMaterial,\n\t\t\t\t\thasFaceVertexUv,\n\t\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\t\tfaces = json.faces,\n\t\t\t\t\tvertices = json.vertices,\n\t\t\t\t\tnormals = json.normals,\n\t\t\t\t\tcolors = json.colors,\n\n\t\t\t\t\tscale = json.scale,\n\n\t\t\t\t\tnUvLayers = 0;\n\n\n\t\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t\t// disregard empty arrays\n\n\t\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = vertices.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\tvertex = new THREE.Vector3();\n\n\t\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t\t}\n\n\t\t\t\toffset = 0;\n\t\t\t\tzLength = faces.length;\n\n\t\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\t\tfaceA = new THREE.Face3();\n\t\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\tfaceB = new THREE.Face3();\n\t\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\t\toffset += 4;\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\n\t\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface = new THREE.Face3();\n\t\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\n\n\t\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\t\tnormal = new THREE.Vector3(\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.bones = json.bones;\n\n\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\t\tvar scale = json.scale;\n\n\t\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\t\tvar vertex = new THREE.Vector3();\n\t\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\t\tvar faces = geometry.faces;\n\t\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\t\tvar outputAnimations = [];\n\n\t\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\t\tvar animations = [];\n\n\t\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\t\tanimations.push( json.animation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\t\tvar clip = THREE.AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t\t}\n\n\t\t\t\t// parse implicit morph animations\n\t\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\t\tvar morphAnimationClips = THREE.AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t\t}\n\n\t\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t\t}\n\n\t\t\treturn function parse( json, path ) {\n\n\t\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t\t// Geometry 4.0 spec\n\t\t\t\t\tjson = json.data;\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tjson.scale = 1.0;\n\n\t\t\t\t}\n\n\t\t\t\tvar geometry = new THREE.Geometry();\n\n\t\t\t\tparseModel( json, geometry );\n\t\t\t\tparseSkin( json, geometry );\n\t\t\t\tparseMorphing( json, geometry );\n\t\t\t\tparseAnimations( json, geometry );\n\n\t\t\t\tgeometry.computeFaceNormals();\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\t\treturn { geometry: geometry };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar materials = THREE.Loader.prototype.initMaterials( json.materials, this.resourcePath || path, this.crossOrigin );\n\n\t\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t} )()\n\n\t} );\n\n\treturn LegacyJSONLoader;\n\n} )();\n","import * as PIXI from 'pixi.js'\nimport 'pixi-spine'\nimport TweenMax from 'gsap'\n\nimport * as THREE from 'three'\n\nwindow.THREE = THREE || {};\n// import { OrbitControls, DeviceOrientationControls } from 'three'\nimport OrbitControls from './OrbitControls.js';\nimport DeviceOrientationControls from './DeviceOrientationControls.js';\nimport LegacyJSONLoader from './LegacyJSONLoader.js'\n// import 'three-orbit-controls'\n\n\n\nclass Game {\n    constructor() {\n\n        this.init();\n    }\n    init() {\n        this.initCanvas();\n    }\n    preload() {}\n\n    initCanvas() {\n        var that = this;\n        var wWidth = window.innerWidth;\n        var wHeight = window.innerHeight;\n\n        var config = {\n            width: wWidth,\n            height: wHeight,\n            autoResize: true,\n            transparent: true,\n            forceCanvas: false,\n            antialias: true,\n            resolution: window.devicePixelRatio,\n            preserveDrawingBuffer: true,\n            view: document.getElementById('canvas-element')\n        }\n        PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.LINEAR;\n        var app = new PIXI.Application(config);\n        app.renderer.view.style['touch-action'] = 'auto';\n\n        app.renderer.plugins.interaction.autoPreventDefault = false;\n        console.log(app.renderer.plugins.interaction.autoPreventDefault)\n        this.app = app;\n        // app.renderer.autoResize = true;\n        // var  data = require('@/assets/img/p0-bg.png');\n        app.loader\n            .add('p0-bg', './assets/img/p0-bg.png')\n            .add('start-btn0', './assets/img/start-btn0.png')\n            .add('start-btn1', './assets/img/start-btn1.png')\n            .add('p0-l0', './assets/img/p0-l0.png')\n            .add('p0-l1', './assets/img/p0-l1.png')\n            .add('p-sprites', './assets/img/p-sprites.json')\n            .add('tfont', './assets/img/tfont.fnt')\n            .add('southstart', './assets/img/southstart.json')\n            .add('northstart', './assets/img/northstart.json')\n            .load(onBoot);\n        var stage0;\n\n\n        var progressText1;\n        var progressL_mask;\n\n        var startBtn;\n\n        function onBoot() {\n            var bg = new PIXI.Sprite.fromImage('p0-bg');\n            bg.anchor.set(0.5);\n            bg.x = app.screen.width / 2;\n            bg.y = app.screen.height / 2;\n            bg.scale.set(Math.max(window.cfg.xscale, window.cfg.yscale))\n            app.stage.addChild(bg);\n\n            stage0 = new PIXI.Container();\n            app.stage.addChild(stage0);\n            stage0.scale.set(window.cfg.scale);\n\n\n\n\n            // var t0 = new PIXI.Sprite.fromImage('p0-t0');\n            // t0.anchor.set(0.5, 0);\n            // t0.x = window.cfg.swidth / 2;\n            // t0.y = window.cfg.sheight * 0.172;\n\n\n            var progressC = new PIXI.Container();\n            stage0.addChild(progressC)\n            progressText1 = new PIXI.extras.BitmapText('00', { font: '60px tfont', align: 'left' });\n            // progressText1.anchor.set(0.5);\n            progressText1.scale.set(47 / 60);\n            progressText1.x = window.cfg.swidth * 0.844;\n            progressText1.y = window.cfg.sheight * 0.657;\n\n            var progressText2 = new PIXI.extras.BitmapText('%', { font: '60px tfont', align: 'left' });\n            progressText2.scale.set(30 / 60);\n            progressText2.x = window.cfg.swidth * 0.92;\n            progressText2.y = window.cfg.sheight * 0.666;\n            // progressText2.anchor.set(0.5);\n\n            progressC.addChild(progressText1, progressText2);\n\n            var progressBg = new PIXI.Sprite.fromImage('p0-l0');\n            progressBg.anchor.set(0.5, 0);\n            progressBg.x = window.cfg.swidth / 2;\n            progressBg.y = window.cfg.sheight * 0.654;\n\n            var progressL = new PIXI.Sprite.fromImage('p0-l1');\n            progressL.x = window.cfg.swidth / 2;\n            progressL.y = window.cfg.sheight * 0.661;\n            progressL.anchor.set(0.5, 0);\n            // progressL.scale.set(0,1)\n            progressL_mask = new PIXI.Sprite.fromImage('p0-l1');\n            progressL_mask.x = window.cfg.swidth / 2 - progressL_mask.width;\n            progressL_mask.y = window.cfg.sheight * 0.663;\n            progressL_mask.anchor.set(0.5, 0);\n            progressL.mask = progressL_mask;\n\n            startBtn = new PIXI.Sprite.fromImage('start-btn0');\n            startBtn.anchor.set(0.5, 0);\n            startBtn.alpha = 0;\n            startBtn.x = window.cfg.swidth / 2;\n            startBtn.y = window.cfg.sheight * 0.827;\n            var startButton = PIXI.Texture.fromImage('start-btn0');\n            var startButtonDown = PIXI.Texture.fromImage('start-btn1');\n            startBtn.interactive = true;\n            startBtn.buttonMode = true;\n\n            startBtn.on('pointerdown', function() {\n                // this.isdown = true;\n                this.texture = startButtonDown;\n            })\n            startBtn.on('click', function() {\n                // this.isdown = true;\n                // this.texture = startButtonDown;\n                // this.alpha = 1;\n                startBtn.interactive = false;\n                that.initThree()\n                console.log('go')\n            })\n            startBtn.on('tap', function() {\n                // this.isdown = true;\n                // this.texture = startButtonDown;\n                // this.alpha = 1;\n                startBtn.interactive = false;\n                that.initThree()\n                console.log('go')\n            })\n            startBtn.on('pointerover', function() {\n                this.texture = startButtonDown;\n            })\n            startBtn.on('pointerout', function() {\n                this.texture = startButton;\n            });\n            startBtn.on('pointerupoutside', function() {\n                this.texture = startButton;\n            });\n            startBtn.on('pointerup', function() {\n                this.texture = startButton;\n            });\n\n            // progressBg.scale.set(window.cfg.scale)\n            var res = app.loader.resources;\n\n            var pigContainer0 = new PIXI.Container();\n            pigContainer0.y = window.cfg.sheight * 0.1;\n            var npig = new PIXI.spine.Spine(res['northstart'].spineData);\n            var localRect0 = npig.getLocalBounds();\n            npig.position.set(localRect0.x, -localRect0.y);\n            pigContainer0.addChild(npig);\n            // console.log(npig)\n            npig.state.setAnimation(0, 'animation', true);\n\n            var pigContainer1 = new PIXI.Container();\n            pigContainer1.y = window.cfg.sheight * 0.1;\n            var spig = new PIXI.spine.Spine(res['southstart'].spineData);\n            var localRect1 = spig.getLocalBounds();\n            spig.position.set(-localRect1.x, -localRect1.y);\n            pigContainer1.addChild(spig);\n            setTimeout(function() {\n                spig.state.setAnimation(0, 'animation', true);\n            }, 1000)\n\n\n            stage0.addChild(progressBg, progressL, progressL_mask, startBtn, pigContainer0, pigContainer1);\n\n            var sprites = new PIXI.particles.ParticleContainer(20, {\n                scale: true,\n                position: true,\n                rotation: true,\n                uvs: true,\n                alpha: true\n            });\n            app.stage.addChild(sprites);\n            var maggots = [];\n            var totalSprites = app.renderer instanceof PIXI.WebGLRenderer ? 20 : 10;\n            var loadsframes = [];\n            for (var i = 0; i < totalSprites; i++) {\n                var rd = Math.floor(Math.random() * 7)\n                // create a new Sprite\n                var p = PIXI.Sprite.fromFrame(`p0-p${rd}.png`);\n                // set the anchor point so the texture is centerd on the sprite\n                p.anchor.set(0.5);\n                // scatter them all\n                p.x = Math.random() * app.screen.width;\n                p.y = -80;\n                p.scale.set(window.cfg.scale);\n                // p.tint = Math.random() * 0x808080;\n\n                // create a random direction in radians\n                p.direction = Math.random() * Math.PI * 2;\n\n                // this number will be used to modify the direction of the sprite over time\n                p.turningSpeed = Math.random() - 0.5;\n\n                // create a random speed between 0 - 2, and these maggots are slooww\n                p.speed = (2 + Math.random() * 2) * 0.5;\n\n                p.offset = Math.random() * 100;\n\n                // finally we push the p into the maggots array so it it can be easily accessed later\n                maggots.push(p);\n\n                sprites.addChild(p);\n            }\n\n            var pBoundsPadding = 100;\n            var pBounds = new PIXI.Rectangle(\n                -pBoundsPadding,\n                -pBoundsPadding,\n                app.screen.width + pBoundsPadding * 2,\n                app.screen.height + pBoundsPadding * 2\n            );\n            var tick = 0;\n            app.ticker.add(function() {\n\n                // iterate through the sprites and update their position\n                for (var i = 0; i < maggots.length; i++) {\n\n                    var p = maggots[i];\n                    // p.scale.y = 0.95 + Math.sin(tick + p.offset) * 0.05;\n                    p.direction += p.turningSpeed * 0.01;\n                    p.x += Math.sin(p.direction) * p.speed;\n                    p.y += Math.cos(p.direction) * p.speed;\n                    p.rotation = -p.direction + Math.PI;\n\n                    // wrap the maggots\n                    if (p.x < pBounds.x) {\n                        p.x += pBounds.width;\n                    } else if (p.x > pBounds.x + pBounds.width) {\n                        p.x -= pBounds.width;\n                    }\n\n                    if (p.y < pBounds.y) {\n                        // p.y += pBounds.height;\n                    } else if (p.y > pBounds.y + pBounds.height) {\n                        // p.y=\n                        p.y -= pBounds.height;\n                    }\n                }\n\n                // increment the ticker\n                tick += 0.1;\n            });\n\n\n            app.loader.add('airplane', './assets/models/airplane.json')\n                .add('boat', './assets/models/boat.json')\n                .add('num-sprite', './assets/img/num-sprite.json')\n                .add('countdown-sprite', './assets/img/countdown-sprite.json')\n                .add('coin-sprite', './assets/img/coin-sprite.json')\n                .add('starrynight', './assets/img/starrynight.jpg')\n\n            app.loader.onProgress.add(onfileComplete)\n            app.loader.onComplete.add(onLoadComplete)\n        }\n        var v = { p: 0 };\n\n        function onfileComplete(e) {\n            var _p = Math.round(e.progress);\n            TweenMax.to(v, 0.1, {\n                p: _p,\n                ease: Power3.easeIn,\n                onUpdate: function() {\n                    var val = Math.round(v.p);\n                    val = val < 10 ? '0' + val : val;\n                    progressText1.text = val;\n                    if (val == 100) {\n                        progressText1.x = window.cfg.swidth * 0.82;\n                    }\n                    progressL_mask.x = window.cfg.swidth / 2 - progressL_mask.width + progressL_mask.width * val / 100;\n                }\n            })\n        }\n\n        function onLoadComplete() {\n            TweenMax.to(startBtn, 0.3, { alpha: 1, delay: 0.1 })\n            // startBtn.alpha=1;\n            // that.initThree();\n            // that.initStage2(1)\n        }\n\n        window.addEventListener('resize', resize)\n\n        function resize() {\n\n            var w = document.getElementsByClassName('canvas-wrapper')[0].clientWidth;\n            var h = document.getElementsByClassName('canvas-wrapper')[0].clientHeight;\n            // var s = w / 750\n            // var h =  h/s\n            app.renderer.resize(w, h)\n            app.render()\n        }\n\n    }\n    initThree() {\n        var that = this;\n        var wWidth = window.innerWidth;\n        var wHeight = window.innerHeight;\n        var rr = Math.floor(Math.random() * 180)\n        var rx = THREE.Math.degToRad(Math.round(rr));\n        var ry = THREE.Math.degToRad(Math.round(rr));\n        var rz = 0;\n        // objCopy.rotation.reorder('YXZ');\n        console.log(rx)\n        var airplaneMesh, boatMesh;\n        var app = that.app;\n        var scene = new THREE.Scene();\n        var camera = new THREE.PerspectiveCamera(60, wWidth / wHeight, 0.1, 3000);\n        // var ctx = document.getElementById('canvas-element').getContext('webgl');\n        // console.log(ctx)\n        var renderer = new THREE.WebGLRenderer({ antialias: true, preserveDrawingBuffer: true })\n        renderer.setSize(wWidth, wHeight);\n\n        camera.position.set(0, 0, 15);\n        camera.lookAt(scene.position);\n        // scene.add(camera);\n        scene.add(camera);\n        var pointLight = new THREE.PointLight(0xffffff, 0.8);\n        camera.add(pointLight);\n        var boatContainer = new THREE.Object3D();\n        var airplaneContainer = new THREE.Object3D();\n        scene.add(airplaneContainer, boatContainer);\n        var orbitControls = new THREE.OrbitControls(camera, document.getElementById('canvas-element'))\n        // orbitControls.minDistance = 75;\n        // orbitControls.maxDistance = 300;\n        // orbitControls.enablePan = false;\n        orbitControls.target.set(0, 0, 0);\n        // orbitControls.enableRotate = false\n        orbitControls.update()\n        scene.add(new THREE.GridHelper(1000, 10));\n        scene.add(new THREE.AxesHelper(20));\n        var controls;\n        var startFlag = false;\n\n        var light = new THREE.AmbientLight(0x404040); // Soft white light\n        scene.add(light);\n\n\n\n        var threeAssets = [];\n        var manager = new THREE.LoadingManager();\n        manager.onStart = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Started loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n        };\n\n        manager.onLoad = function() {\n            console.log('Loading complete!');\n            threecallback && threecallback();\n        };\n\n        manager.onProgress = function(url, itemsLoaded, itemsTotal) {\n            // console.log('Loading file: ' + url + '.\\nLoaded ' + itemsLoaded + ' of ' + itemsTotal + ' files.');\n            var per = parseInt(itemsLoaded / itemsTotal * 100);\n            console.log(per)\n            // $(\"#percentage\").html(per + ' %');\n        };\n\n        manager.onError = function(url) {\n            console.log('There was an error loading ' + url);\n        };\n\n        function threecallback() {\n\n            var sgeometry = new THREE.SphereBufferGeometry(1500, 40, 40);\n            sgeometry.scale(-1, 1, 1);\n            var starrynight = threeAssets['starrynight'];\n            var smaterial = new THREE.MeshBasicMaterial({\n                map: starrynight,\n                fog: false,\n                transparent: true,\n                opacity: 1\n            });\n\n            var smesh = new THREE.Mesh(sgeometry, smaterial);\n\n            smesh.rotation.y = Math.PI / 2;\n\n\n            var texture = threeAssets['color'];\n\n            var boatGeo = threeAssets['boat'];\n            var boatMat = new THREE.MeshPhongMaterial({\n                map: texture,\n                side: THREE.DoubleSide,\n                specular: 0x000000,\n                shininess: 0\n            });\n\n            var boatMesh = new THREE.Mesh(boatGeo, boatMat);\n            boatContainer.add(boatMesh);\n            boatContainer.rotation.set(\n                rx,\n                ry,\n                rz);\n\n            // boatMesh.position.y = Math.sin(this.angle) * 1.5;\n            boatContainer.position.set(15, 0, 0);\n\n\n\n            var airplaneGeo = threeAssets['airplane'];\n            var airplaneMat = new THREE.MeshStandardMaterial({\n                color: 0x646464,\n                roughness: .83,\n                metalness: .5,\n                emissive: 0xc8c8c8,\n                map: texture,\n                emissiveMap: texture,\n                side: THREE.DoubleSide\n            });\n\n\n            airplaneMesh = new THREE.Mesh(airplaneGeo, airplaneMat);\n            airplaneContainer.add(airplaneMesh);\n            // scene.add( new THREE.BoxHelper( airplaneMesh ) );\n\n            // console.log(airplaneContainer.quaternion)\n            // airplaneContainer.rotateX(rx)\n            // objCopy.rotateX(-rx)\n            // airplaneContainer.rotateY(ry)\n            console.log(airplaneContainer.getWorldQuaternion(), airplaneMesh.rotation)\n            // console.log(airplaneContainer.rotation)\n            airplaneContainer.position.set(0, 0, 0);\n            // airplaneMesh.rotation.y = Math.PI;\n            // camera.lookAt(boatContainer.position);\n\n            // rx = Math.random() * 2 * Math.PI;\n            // ry = Math.random() * 2 * Math.PI;\n            // rz = Math.random() * 2 * Math.PI;\n            scene.add(smesh, airplaneContainer);\n\n            if (airplaneMesh.quaternion.equals(airplaneContainer.quaternion)) {\n                console.log('true')\n                // controls.dispose()\n            }\n\n            // navigator.permissions.query()\n            controls = new THREE.DeviceOrientationControls(airplaneMesh);\n            controls.disconnect();\n            // airplaneContainer.rotateX(rx);\n\n\n            // const id = setTimeout(() => alert('Enable device orientation in Settings > Safari > Motion & Orientation Access.'), 500);\n\n            // window.addEventListener('deviceorientation', event => {\n            //     clearTimeout(id);\n            //     // ...\n            // });\n\n            // console.log(airplaneMesh.quaternion)\n\n            // airplaneMesh.rotation.set(rx, ry, rz);\n        }\n        var objectLoader = new THREE.LegacyJSONLoader(manager);\n        objectLoader.load('./assets/models/airplane.json', function(rs) {\n            threeAssets['airplane'] = rs;\n        });\n        objectLoader.load('./assets/models/boat.json', function(rs) {\n            threeAssets['boat'] = rs;\n        });\n        var textureLoader = new THREE.TextureLoader(manager);\n        textureLoader.load('./assets/models/color.jpg', function(rs) {\n            threeAssets['color'] = rs;\n        });\n        textureLoader.load('./assets/img/starrynight.jpg', function(rs) {\n            threeAssets['starrynight'] = rs;\n        });\n\n\n\n\n        var THREE_TEXTURE = PIXI.BaseTexture.fromCanvas(renderer.domElement, PIXI.SCALE_MODES.LINEAR);\n        var THREE_SPRITE = new PIXI.Sprite.from(new PIXI.Texture(THREE_TEXTURE));\n        app.stage.addChild(THREE_SPRITE);\n\n        var game0 = new PIXI.Container();\n        game0.scale.set(window.cfg.scale);\n        app.stage.addChild(game0);\n\n        var countdownframes = [];\n        for (var i = 0; i < 12; i++) {\n            var val = i < 10 ? '0' + i : i;\n            countdownframes.push(PIXI.Texture.fromFrame(`countdown_${val}.png`));\n        }\n        var numframes = [];\n        for (var i = 0; i < 5; i++) {\n            numframes.push(PIXI.Texture.fromFrame(`${i+1}.png`));\n        }\n\n\n\n        var countSprite = new PIXI.extras.AnimatedSprite(countdownframes);\n        countSprite.anchor.set(0.5);\n        countSprite.x = window.cfg.swidth / 2;\n        countSprite.y = window.cfg.sheight / 2;\n        game0.addChild(countSprite)\n        countSprite.loop = false;\n        countSprite.animationSpeed = 12 / 60;\n        // countSprite.gotoAndStop(11);\n        countSprite.play()\n\n\n        var numSprite = new PIXI.extras.AnimatedSprite(numframes);\n        numSprite.anchor.set(0.5);\n        numSprite.x = window.cfg.swidth / 2;\n        numSprite.y = window.cfg.sheight / 2;\n        game0.addChild(numSprite)\n        numSprite.loop = false;\n        numSprite.animationSpeed = 1 / 60;\n        numSprite.alpha = 1;\n        numSprite.play();\n        numSprite.onComplete = function() {\n            numSprite.alpha = 0;\n        }\n\n        numSprite.onFrameChange = function(n) {\n            if (n === 4) {\n                numSprite.onFrameChange = null\n                countSprite.animationSpeed = -10 / 60;\n                countSprite.play();\n                countSprite.onComplete = function() {\n                    // numSprite.alpha = 1;\n                    controls.connect();\n                    startFlag = true;\n                }\n            }\n        };\n\n        var coinframes = [];\n        for (var i = 0; i < 16; i++) {\n            var val = i < 10 ? '0' + i : i;\n            coinframes.push(PIXI.Texture.fromFrame(`coin_${val}.png`));\n        }\n        var coinSprite = new PIXI.extras.AnimatedSprite(coinframes);\n        coinSprite.anchor.set(0.5);\n        coinSprite.x = window.cfg.swidth / 2;\n        coinSprite.y = window.cfg.sheight / 2;\n        game0.addChild(coinSprite);\n        coinSprite.animationSpeed = 16 / 60;\n        coinSprite.play();\n        coinSprite.alpha = 0;\n\n\n        window.addEventListener('resize', onWindowResize, false);\n\n        function onWindowResize() {\n            camera.aspect = window.innerWidth / window.innerHeight;\n            camera.updateProjectionMatrix();\n            renderer.setSize(window.innerWidth, window.innerHeight);\n        }\n        var lasetE;\n\n        function isParallel(v1, v2) {\n\n            var dotValue = v1.dot(v2);\n            // console.log(value.toFixed(2))\n            var crossValue = new THREE.Vector3();\n            crossValue.crossVectors(v1, v2)\n            // value = value.dot(v2.normalize());\n            // console.log(dotValue)\n            if (crossValue.x.toFixed(1) == 0 && crossValue.y.toFixed(1) == 0 && crossValue.z.toFixed(1) == 0 && dotValue > 0)\n                return true;\n            return false;\n\n        }\n\n        var animate = function() {\n            requestAnimationFrame(animate);\n            if (controls) {\n                // console.log(controls)\n                controls.update();\n            }\n            if (startFlag && airplaneMesh) {\n                var v1 = new THREE.Vector3(0, 0, 1);\n                var v2 = new THREE.Vector3(0, 0, 1);\n                //object's positive z-axis\n                airplaneMesh.getWorldDirection(v1);\n                console.log(v1)\n\n                if (isParallel(v1, v2) && airplaneMesh.rotation.z >= 0) {\n                \tstartFlag=false\n                    console.log('finish')\n                    TweenMax.to(airplaneMesh.rotation, 0.6, { x: 0, y: 0, z: 0 });\n                    // alert('Finish')\n                    controls.dispose();\n                    TweenMax.to(coinSprite, 0.6, { alpha: 1 })\n\n                    // TweenMax.to(cv, 0.5, {\n                    //     x: boatContainer.position.x,\n                    //     y: boatContainer.position.y,\n                    //     z: boatContainer.position.z,\n                    //     onUpdate: function() {\n                    //         camera.lookAt(cv);\n                    //     }\n                    // })\n                }\n                // console.log(isParallel(v1, v2), rr, v1, v2)\n                // var _rx = airplaneMesh.rotation.x;\n                // var _ry = airplaneMesh.rotation.y;\n                // var _rz = airplaneMesh.rotation.z;\n\n                // if (lasetE.equals(airplaneMesh.rotation))\n                // console.log(airplaneMesh.rotation)\n                // var _r = airplaneMesh.rotation.reorder('XYZ');\n                // var _rr = Math.round(THREE.Math.radToDeg(_r.x));\n                // objCopy.rotateX(-rx)\n                // console.log(_rr)\n\n                // if (!((Math.abs(_rr)-Math.abs(rr))%90)) {\n                // console.log(objCopy.rotation)\n                // if (!lasetE) {\n                //     console.log(airplaneMesh.quaternion)\n                // } \n\n                // if (airplaneMesh.quaternion.equals(airplaneContainer.quaternion)) {\n                //     console.log('true')\n                //     controls.dispose()\n                // }\n            }\n            // cube.rotation.x += 0.01;\n            // cube.rotation.y += 0.01;\n            renderer.render(scene, camera);\n\n\n            THREE_TEXTURE.update();\n        };\n\n        animate();\n    }\n\n    goNext(p, s) {\n        TweenMax.set(s, {\n            alpha: 1,\n            onComplete: function() {\n                p.alpha = 0;\n                s.state.setAnimation(0, 'animation', false);\n            }\n        })\n    }\n    create() {\n        var that = this;\n    }\n}\n\n\nexport default Game;","/**\n * Created by sanchez \n */\n'use strict';\n\n//check the environment\n// if (process.env.NODE_ENV !== 'production') {\n//     console.log('Looks like we are in development mode!');\n// }\n\n// import CSS\n// import animate_css from 'animate.css/animate.min.css';\nimport css from '../css/css.css';\n\nimport Game from './entities/Game';\nvar game = new Game();\n\nwindow.cfg = {\n    scale: 1,\n    xscale: 1,\n    yscale: 1,\n    width: window.innerWidth,\n    height: window.innerHeight,\n    pwidth: 750,\n    pheight: 1334,\n    swidth: 0,\n    sheight: 0\n}\nwindow.h5 = {\n    isPc: function() {\n        var userAgentInfo = navigator.userAgent;\n        var Agents = new Array('Android', 'iPhone', 'SymbianOS', 'Windows Phone', 'iPad', 'iPod');\n        var flag = true;\n        for (var v = 0; v < Agents.length; v++) {\n            if (userAgentInfo.indexOf(Agents[v]) > 0) { flag = false; break; }\n        }\n        return flag;\n    },\n    rootResize: function() {\n        var wFsize;\n\n        //iphone6/6s/7/8 orientation=portrait screen.width=750px screen.height=1334px / WeChat window.innerWidth=750px window.innerHeight=1206px \n        var wWidth = document.documentElement.clientWidth || window.innerWidth;\n        var wHeight = document.documentElement.clientHeight || window.innerHeight;\n\n        if (wWidth > wHeight) {\n            wFsize = wHeight / 750 * 100;\n            window.cfg.scale = wHeight / 750;\n            window.cfg.xscale = wHeight / 750;\n            window.cfg.yscale = wWidth / 1334;\n        } else {\n            wFsize = wWidth / 750 * 100;\n            window.cfg.scale = wWidth / 750;\n            window.cfg.xscale = wWidth / 750;\n            window.cfg.yscale = wHeight / 1334;\n        }\n        window.cfg.pwidth = wWidth * window.devicePixelRatio;\n        window.cfg.pheight = wHeight * window.devicePixelRatio;\n        window.cfg.swidth = wWidth / window.cfg.scale;\n        window.cfg.sheight = wHeight / window.cfg.scale;\n        document.getElementsByTagName('html')[0].style.fontSize = wFsize + 'px';\n    },\n    eventInit: function() {\n        var that = this;\n        document.addEventListener('touchstart', function(e) {}, { passive: false });\n        document.addEventListener('touchmove', function(e) {\n            e.preventDefault();\n        }, { passive: false });\n        return that;\n    },\n    cssInit: function() {\n        var that = this;\n        var noChangeCountToEnd = 100,\n            noEndTimeout = 1000;\n        that.rootResize();\n        window.addEventListener('onorientationchange' in window ? 'orientationchange' : 'resize', function() {\n            var interval,\n                timeout,\n                end,\n                lastInnerWidth,\n                lastInnerHeight,\n                noChangeCount;\n            end = function() {\n                //\"orientationchangeend\"\n                clearInterval(interval);\n                clearTimeout(timeout);\n                interval = null;\n                timeout = null;\n                that.rootResize();\n            };\n            interval = setInterval(function() {\n                if (window.innerWidth === lastInnerWidth && window.innerHeight === lastInnerHeight) {\n                    noChangeCount++;\n                    if (noChangeCount === noChangeCountToEnd) {\n                        //The interval resolved the issue first.\n                        end();\n                    }\n                } else {\n                    lastInnerWidth = window.innerWidth;\n                    lastInnerHeight = window.innerHeight;\n                    noChangeCount = 0;\n                }\n            });\n            timeout = setTimeout(function() {\n                //The timeout happened first.\n                end();\n            }, noEndTimeout);\n        });\n\n        return that;\n    },\n    init: function() {\n        var that = this;\n        that.cssInit().eventInit();\n    }\n};\nwindow.onload = function() {\n    window.h5.init();\n};\n\n//Stats JavaScript Performance Monitor\n\n//import Stats from 'stats.js';\n//showStats();\n// function showStats() {\n//     var stats = new Stats();\n//     stats.showPanel(0); // 0: fps, 1: ms, 2: mb, 3+: custom\n//     var fs = document.createElement('div');\n//     fs.style.position = 'absolute';\n//     fs.style.left = 0;\n//     fs.style.top = 0;\n//     fs.style.zIndex = 999;\n//     fs.appendChild(stats.domElement);\n//     document.body.appendChild(fs);\n\n//     function animate() {\n//         stats.begin();\n//         // monitored code goes here\n//         stats.end();\n//         requestAnimationFrame(animate);\n//     }\n//     requestAnimationFrame(animate);\n// }"],"sourceRoot":""}